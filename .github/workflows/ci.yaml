name: test
on:
  push:
    branches:
      - "main"
      - "release-*"
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

env:
  GO_VERSION: '1.24'

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Set up Task
        uses: arduino/setup-task@v1
        with:
          version: 3.x

      - name: Check out code into the Go module directory
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Restore Go build cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-v1-${{ github.run_id }}

      - name: Get dependencies
        run: go mod download

      - name: build
        run: task

  test:
    name: Unit Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GOPATH: /home/runner/go
    steps:
      - uses: actions/checkout@v3

      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          version: 3.x

      - name: Restore Go build cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-v1-${{ github.run_id }}

      - run: task test